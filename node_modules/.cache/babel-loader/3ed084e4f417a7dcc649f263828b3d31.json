{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Search.jsx\";\nimport React, { useContext } from 'react';\nimport MovieContext from './context';\nimport TopRated from './TopRated';\nimport Result from './Result';\nimport { fetchOMDB } from './service';\n\nconst Search = ({\n  onSearch\n}) => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n\n  const searchOmdb = () => {\n    fetchOMDB(movieState.keyword).then(json => {\n      setMovieState({ ...movieState,\n        imdbID: json.Search[0].imdbID,\n        Title: json.Search[0].Title,\n        PosterUrl: json.Search[0].Poster,\n        Year: json.Search[0].Year\n      });\n    });\n  };\n\n  const handleChange = e => {\n    setMovieState({ ...movieState,\n      keyword: e.target.value\n    });\n  };\n\n  let result;\n\n  if (!movieState.imdbID) {\n    result = /*#__PURE__*/React.createElement(TopRated, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  } else {\n    result = /*#__PURE__*/React.createElement(Result, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search...\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => searchOmdb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, \" Search \"), result);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Search.jsx"],"names":["React","useContext","MovieContext","TopRated","Result","fetchOMDB","Search","onSearch","movieState","setMovieState","searchOmdb","keyword","then","json","imdbID","Title","PosterUrl","Poster","Year","handleChange","e","target","value","result"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA+BR,UAAU,CAACC,YAAD,CAA/C;;AAEA,QAAMQ,UAAU,GAAG,MAAK;AAEvBL,IAAAA,SAAS,CAACG,UAAU,CAACG,OAAZ,CAAT,CACCC,IADD,CACMC,IAAI,IAAG;AACXJ,MAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AACfM,QAAAA,MAAM,EAACD,IAAI,CAACP,MAAL,CAAY,CAAZ,EAAeQ,MADP;AAEfC,QAAAA,KAAK,EAAEF,IAAI,CAACP,MAAL,CAAY,CAAZ,EAAeS,KAFP;AAGfC,QAAAA,SAAS,EAACH,IAAI,CAACP,MAAL,CAAY,CAAZ,EAAeW,MAHV;AAIfC,QAAAA,IAAI,EAACL,IAAI,CAACP,MAAL,CAAY,CAAZ,EAAeY;AAJL,OAAD,CAAb;AAMD,KARD;AASE,GAXH;;AAaA,QAAMC,YAAY,GAAIC,CAAD,IAAM;AAC1BX,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgBG,MAAAA,OAAO,EAAES,CAAC,CAACC,MAAF,CAASC;AAAlC,KAAD,CAAb;AACA,GAFD;;AAIA,MAAIC,MAAJ;;AACA,MAAG,CAACf,UAAU,CAACM,MAAf,EAAsB;AACrBS,IAAAA,MAAM,gBAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACA,GAFD,MAEK;AACJA,IAAAA,MAAM,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACA;;AACD,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,WAA/B;AAA2C,IAAA,QAAQ,EAAKH,CAAD,IAAKD,YAAY,CAACC,CAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAQ,IAAA,OAAO,EAAI,MAAIV,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGEa,MAHF,CADA;AAOA,CAjCD;;AAkCA,eAAejB,MAAf","sourcesContent":["import React, {useContext} from 'react';\nimport MovieContext from './context';\nimport TopRated from './TopRated';\nimport Result from './Result';\nimport {fetchOMDB} from './service';\n\nconst Search = ({onSearch})=>{\n\tconst [movieState, setMovieState]  = useContext(MovieContext);\n\t\n\tconst searchOmdb = () =>{\n\n\t\tfetchOMDB(movieState.keyword)\n\t\t.then(json =>{\n\t\t  setMovieState({ ...movieState, \n\t\t\timdbID:json.Search[0].imdbID,\n\t\t\tTitle: json.Search[0].Title,\n\t\t\tPosterUrl:json.Search[0].Poster,\n\t\t\tYear:json.Search[0].Year\n\t\t  })\n\t\t})\n\t  };\n\n\tconst handleChange = (e) =>{\n\t\tsetMovieState({...movieState, keyword: e.target.value})\n\t}\n\n\tlet result;\n\tif(!movieState.imdbID){\n\t\tresult = <TopRated />\n\t}else{\n\t\tresult = <Result />\n\t}\n\treturn (\n\t<div>\n\t\t<input type='text' placeholder='Search...' onChange = {(e)=>handleChange(e)} />\n\t\t<button onClick = {()=>searchOmdb} > Search </button>\n\t\t{result}\n\t\t\n\t</div>)\n}\nexport default Search;"]},"metadata":{},"sourceType":"module"}