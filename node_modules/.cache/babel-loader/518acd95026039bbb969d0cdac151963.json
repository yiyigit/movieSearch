{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport errors from \"./errors\";\nimport Recommendation from \"./Recommendation\";\nimport { fetchDetail, convertImdbIdtoId } from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Result = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [error, setError] = useContext(ErrorContext);\n  const [comment, setComment] = useState(\"\");\n  useEffect(() => {\n    if (movieState.id) {\n      getDetail(movieState.id);\n      setError(\"\");\n    }\n\n    if (!movieState.id) {\n      convertImdbIdtoId(movieState.imdbID).then(json => {\n        if (json.movie_results.length === 0) {\n          throw new Error(\"LACK_KEYWORD\");\n        }\n\n        const id = json.movie_results[0].id;\n        getDetail(id);\n        setError(\"\");\n      }).catch(err => {\n        setError(errors[err.message || err || \"DEFAULT\"]);\n      });\n    }\n  }, [movieState.id]);\n\n  const getDetail = id => {\n    const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n    return fetchDetail(id).then(json => {\n      if (!json.poster_path) {\n        setMovieState({ ...movieState,\n          PosterUrl: unavailablePic\n        });\n      } else {\n        setMovieState({ ...movieState,\n          PosterUrl: imgURL + json.poster_path\n        });\n      }\n\n      setError(\"\");\n    }).catch(err => {\n      setError(errors[err.message || \"DEFAULT\"]);\n    });\n  };\n\n  const handleInput = e => {\n    setComment(e.target.value);\n  };\n\n  const sendCommentToServer = () => {\n    console.log(comment);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \" Title: \", movieState.Title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \" Year: \", movieState.Year, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \" Overview: \", movieState.overview), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"My Comment:\", /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"comment\",\n    rows: \"4\",\n    cols: \"50\",\n    value: comment,\n    onChange: e => handleInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendCommentToServer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"add/update\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: movieState.PosterUrl,\n    alt: \"poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Recommendation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx"],"names":["React","useContext","useState","useEffect","MovieContext","ErrorContext","errors","Recommendation","fetchDetail","convertImdbIdtoId","unavailablePic","Result","movieState","setMovieState","error","setError","comment","setComment","id","getDetail","imdbID","then","json","movie_results","length","Error","catch","err","message","imgURL","poster_path","PosterUrl","handleInput","e","target","value","sendCommentToServer","console","log","Title","Year","overview"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport errors from \"./errors\";\nimport Recommendation from \"./Recommendation\";\nimport { fetchDetail, convertImdbIdtoId } from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Result = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [error, setError] = useContext(ErrorContext);\n  const [comment, setComment] = useState(\"\");\n\n  useEffect(() => {\n    if (movieState.id) {\n      getDetail(movieState.id);\n      setError(\"\");\n    }\n    if (!movieState.id) {\n      convertImdbIdtoId(movieState.imdbID)\n        .then((json) => {\n          if (json.movie_results.length === 0) {\n            throw new Error(\"LACK_KEYWORD\");\n          }\n          const id = json.movie_results[0].id;\n          getDetail(id);\n          setError(\"\");\n        })\n        .catch((err) => {\n          setError(errors[err.message || err || \"DEFAULT\"]);\n        });\n    }\n  }, [movieState.id]);\n\n  const getDetail = (id) => {\n    const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n    return fetchDetail(id)\n\t\t\t.then((json) => {\n\t\t\t\tif (!json.poster_path) {\n\t\t\t\t\tsetMovieState({ ...movieState, PosterUrl: unavailablePic });\n\t\t\t\t} else {\n\t\t\t\t\tsetMovieState({\n            ...movieState,\n            PosterUrl: imgURL + json.poster_path,\n          });\n\t\t\t\t}\n          \n        setError(\"\");\n      })\n      .catch((err) => {\n        setError(errors[err.message || \"DEFAULT\"]);\n      });\n  };\n  const handleInput = (e) => {\n    setComment(e.target.value);\n  };\n\tconst sendCommentToServer = () => {\n\t\tconsole.log(comment);\n\t};\n  return (\n    <div className=\"container\">\n      <div className=\"flex-box\">\n        <div className=\"result-detail\">\n          <p> Title: {movieState.Title} </p>\n          <p className=\"time\"> Year: {movieState.Year} </p>\n          <p className=\"overview\"> Overview: {movieState.overview}</p>\n          <label>\n            My Comment:\n            <textarea\n              id=\"comment\"\n              rows=\"4\"\n              cols=\"50\"\n              value={comment}\n              onChange={(e) => handleInput(e)}\n            ></textarea>\n          </label>\n          <button onClick={sendCommentToServer}>add/update</button>\n        </div>\n        <div className=\"img-detail\">\n          <img src={movieState.PosterUrl} alt=\"poster\" />\n        </div>\n      </div>\n\n      <Recommendation />\n    </div>\n  );\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}