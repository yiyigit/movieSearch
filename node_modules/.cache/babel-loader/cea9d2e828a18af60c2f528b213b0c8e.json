{"ast":null,"code":"import _objectSpread from\"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from\"react\";import{MovieContext,ErrorContext}from\"./context\";import TopRated from\"./TopRated\";import errors from\"./errors\";import Result from\"./Result\";import{fetchOMDB}from\"./service\";var Search=function Search(){var _useContext=useContext(MovieContext),_useContext2=_slicedToArray(_useContext,2),movieState=_useContext2[0],setMovieState=_useContext2[1];var _useContext3=useContext(ErrorContext),_useContext4=_slicedToArray(_useContext3,1),setError=_useContext4[0];var searchOmdb=function searchOmdb(e){e.preventDefault();fetchOMDB(movieState.keyword).then(function(json){if(json.Error){throw new Error(\"MOVIE_NOT_FOUND\");}else{setMovieState({imdbID:json.Search[0].imdbID,Title:json.Search[0].Title,Year:json.Search[0].Year});}}).catch(function(err){setError(errors[err.error||err.message||\"DEFAULT\"]);setMovieState({});});};var handleChange=function handleChange(e){setMovieState(_objectSpread({},movieState,{keyword:e.target.value}));};var result;if(movieState.imdbID||movieState.id){result=/*#__PURE__*/React.createElement(Result,null);}else{result=/*#__PURE__*/React.createElement(TopRated,null);}console.log(movieState);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(e){return searchOmdb(e);},className:\"search-panel\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:movieState.keyword||\"\",placeholder:\"Search...\",onChange:function onChange(e){return handleChange(e);}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",disabled:!movieState.keyword},\" \",\"Search\",\" \")),result);};export default Search;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Search.jsx"],"names":["React","useContext","MovieContext","ErrorContext","TopRated","errors","Result","fetchOMDB","Search","movieState","setMovieState","setError","searchOmdb","e","preventDefault","keyword","then","json","Error","imdbID","Title","Year","catch","err","error","message","handleChange","target","value","result","id","console","log"],"mappings":"6WAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,YAAT,CAAuBC,YAAvB,KAA2C,WAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,SAAT,KAA0B,WAA1B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,iBACiBP,UAAU,CAACC,YAAD,CAD3B,4CACZO,UADY,iBACAC,aADA,kCAEAT,UAAU,CAACE,YAAD,CAFV,6CAEZQ,QAFY,iBAInB,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACAP,SAAS,CAACE,UAAU,CAACM,OAAZ,CAAT,CACGC,IADH,CACQ,SAACC,IAAD,CAAU,CACd,GAAIA,IAAI,CAACC,KAAT,CAAgB,CACd,KAAM,IAAIA,CAAAA,KAAJ,CAAU,iBAAV,CAAN,CACD,CAFD,IAEO,CACLR,aAAa,CAAC,CACZS,MAAM,CAAEF,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAeW,MADX,CAEZC,KAAK,CAAEH,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAeY,KAFV,CAGZC,IAAI,CAAEJ,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAea,IAHT,CAAD,CAAb,CAKD,CACF,CAXH,EAYGC,KAZH,CAYS,SAACC,GAAD,CAAS,CACdZ,QAAQ,CAACN,MAAM,CAACkB,GAAG,CAACC,KAAJ,EAAaD,GAAG,CAACE,OAAjB,EAA4B,SAA7B,CAAP,CAAR,CACAf,aAAa,CAAC,EAAD,CAAb,CACD,CAfH,EAgBD,CAlBD,CAoBA,GAAMgB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACb,CAAD,CAAO,CAC1BH,aAAa,kBAAMD,UAAN,EAAkBM,OAAO,CAAEF,CAAC,CAACc,MAAF,CAASC,KAApC,GAAb,CACD,CAFD,CAIA,GAAIC,CAAAA,MAAJ,CACA,GAAIpB,UAAU,CAACU,MAAX,EAAqBV,UAAU,CAACqB,EAApC,CAAwC,CACtCD,MAAM,cAAG,oBAAC,MAAD,MAAT,CACD,CAFD,IAEO,CACLA,MAAM,cAAG,oBAAC,QAAD,MAAT,CACD,CACDE,OAAO,CAACC,GAAR,CAAYvB,UAAZ,EACA,mBACE,4CACE,4BAAM,QAAQ,CAAE,kBAACI,CAAD,QAAKD,CAAAA,UAAU,CAACC,CAAD,CAAf,EAAhB,CAAoC,SAAS,CAAC,cAA9C,eACE,6BACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEJ,UAAU,CAACM,OAAX,EAAsB,EAF/B,CAGE,WAAW,CAAC,WAHd,CAIE,QAAQ,CAAE,kBAACF,CAAD,QAAOa,CAAAA,YAAY,CAACb,CAAD,CAAnB,EAJZ,EADF,cAOE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAE,CAACJ,UAAU,CAACM,OAA5C,EACG,GADH,UAES,GAFT,CAPF,CADF,CAaGc,MAbH,CADF,CAiBD,CApDD,CAqDA,cAAerB,CAAAA,MAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport TopRated from \"./TopRated\";\nimport errors from \"./errors\";\nimport Result from \"./Result\";\nimport { fetchOMDB } from \"./service\";\n\nconst Search = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [setError] = useContext(ErrorContext);\n\n  const searchOmdb = (e) => {\n    e.preventDefault()\n    fetchOMDB(movieState.keyword)\n      .then((json) => {\n        if (json.Error) {\n          throw new Error(\"MOVIE_NOT_FOUND\");\n        } else {\n          setMovieState({\n            imdbID: json.Search[0].imdbID,\n            Title: json.Search[0].Title,\n            Year: json.Search[0].Year,\n          });\n        }\n      })\n      .catch((err) => {\n        setError(errors[err.error || err.message || \"DEFAULT\"]);\n        setMovieState({});\n      });\n  };\n\n  const handleChange = (e) => {\n    setMovieState({ ...movieState, keyword: e.target.value });\n  };\n\n  let result;\n  if (movieState.imdbID || movieState.id) {\n    result = <Result />;\n  } else {\n    result = <TopRated />;\n  }\n  console.log(movieState);\n  return (\n    <div>\n      <form onSubmit={(e)=>searchOmdb(e)} className=\"search-panel\">\n        <input\n          type=\"text\"\n          value={movieState.keyword || \"\"}\n          placeholder=\"Search...\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button type=\"submit\" disabled={!movieState.keyword}>\n          {\" \"}\n          Search{\" \"}\n        </button>\n      </form>\n      {result}\n    </div>\n  );\n};\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}