{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Recommendation.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport { fetchRecommendation, convertImdbIdtoId } from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Recommendation = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [recommendationList, setRecommendationList] = useState([]);\n  const [error, setError] = useContext(ErrorContext);\n  useEffect(() => {\n    if (movieState.id) {\n      getRecommendation(movieState.id);\n    } else {\n      convertImdbIdtoId(movieState.imdbID).then(json => {\n        const id = json.movie_results[0].id;\n        getRecommendation(id);\n      }).catch(err => {\n        setError(errors[err.message || \"DEFAULT\"]);\n      });\n      ;\n    }\n  }, [movieState.imdbID, movieState.id]);\n\n  const getRecommendation = id => {\n    return fetchRecommendation(id).then(json => {\n      setRecommendationList(json.results.slice(0, 3));\n    }).catch(err => {\n      setError(errors[err.message || \"DEFAULT\"]);\n    });\n    ;\n  };\n\n  const searchById = id => {\n    setMovieState({ ...movieState,\n      id: id\n    });\n  };\n\n  const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n  const recommendationArray = recommendationList.map(movie => {\n    let introduction;\n\n    if (movie.poster_path) {\n      introduction = /*#__PURE__*/React.createElement(\"img\", {\n        src: imgURL + movie.poster_path,\n        className: \"clickable\",\n        onClick: () => searchById(movie.id),\n        alt: \"poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      });\n    } else {\n      introduction = /*#__PURE__*/React.createElement(\"img\", {\n        src: unavailablePic,\n        alt: \"poster unavailable\",\n        className: \"clickable\",\n        onClick: () => searchById(movie.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: recommendationList.indexOf(movie),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"clickable\",\n      onClick: () => searchById(movie.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \" \", movie.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \" \", movie.release_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \" Rating: \", movie.vote_average, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => searchById(movie.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \" details\"), introduction);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Recommendation according to \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, movieState.Title), \" \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"recommendation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, recommendationArray));\n};\n\nexport default Recommendation;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Recommendation.jsx"],"names":["React","useState","useContext","useEffect","MovieContext","ErrorContext","fetchRecommendation","convertImdbIdtoId","unavailablePic","Recommendation","movieState","setMovieState","recommendationList","setRecommendationList","error","setError","id","getRecommendation","imdbID","then","json","movie_results","catch","err","errors","message","results","slice","searchById","imgURL","recommendationArray","map","movie","introduction","poster_path","indexOf","title","release_date","vote_average","Title"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport { fetchRecommendation, convertImdbIdtoId } from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Recommendation = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [recommendationList, setRecommendationList] = useState([]);\n  const [error, setError] = useContext(ErrorContext);\n\n  useEffect(() => {\n    if (movieState.id) {\n      getRecommendation(movieState.id);\n    } else {\n      convertImdbIdtoId(movieState.imdbID)\n        .then((json) => {\n          const id = json.movie_results[0].id;\n          getRecommendation(id);\n        })\n        .catch((err) => {\n          setError(errors[err.message || \"DEFAULT\"]);\n        });;\n    }\n  }, [movieState.imdbID, movieState.id]);\n\n  const getRecommendation = (id) => {\n    return fetchRecommendation(id)\n      .then((json) => {\n        setRecommendationList(json.results.slice(0, 3));\n      })\n      .catch((err) => {\n        setError(errors[err.message || \"DEFAULT\"]);\n      });;\n  };\n  const searchById = (id) => {\n    setMovieState({ ...movieState, id: id });\n  };\n\n  const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n  const recommendationArray = recommendationList.map((movie) => {\n    let introduction;\n    if (movie.poster_path) {\n      introduction = (\n        <img\n          src={imgURL + movie.poster_path}\n          className=\"clickable\"\n          onClick={() => searchById(movie.id)}\n          alt=\"poster\"\n        />\n      );\n    } else {\n      introduction = (\n        <img\n          src={unavailablePic}\n          alt=\"poster unavailable\"\n          className=\"clickable\"\n          onClick={() => searchById(movie.id)}\n        />\n      );\n    }\n    return (\n      <li key={recommendationList.indexOf(movie)}>\n        <p className=\"clickable\" onClick={() => searchById(movie.id)}>\n          {\" \"}\n          {movie.title}{\" \"}\n        </p>\n        <p className=\"time\"> {movie.release_date} </p>\n        <p className=\"rating\"> Rating: {movie.vote_average} </p>\n        <button onClick={() => searchById(movie.id)}> details</button>\n        {introduction}\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <h2>\n        Recommendation according to <span>{movieState.Title}</span>{\" \"}\n      </h2>\n      <ul className=\"recommendation\">{recommendationArray}</ul>\n    </div>\n  );\n};\n\nexport default Recommendation;\n"]},"metadata":{},"sourceType":"module"}