{"ast":null,"code":"const convertNetworkError = () => Promise.reject({\n  error: \"NETWORK_ERROR\"\n});\n\nconst convertError = response => {\n  if (response.ok) {\n    return response.json();\n  }\n\n  return response.json().then(err => Promise.reject(err));\n};\n\nexport const fetchTopRated = () => {\n  const TMDB = \"https://api.themoviedb.org/3/movie/top_rated?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1\";\n  return fetch(TMDB, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const convertImdbIdtoId = imdbId => {\n  const TMDB = `https://api.themoviedb.org/3/find/${imdbId}?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&external_source=imdb_id`;\n  return fetch(TMDB, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchRecommendation = id => {\n  const TMDB = `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1`;\n  return fetch(TMDB, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchDetail = id => {\n  const TMDB = `https://api.themoviedb.org/3/movie/${id}?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US`;\n  return fetch(TMDB, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchOMDB = keyword => {\n  const OMDB = \"https://www.omdbapi.com/?apikey=c27a2924&s=\";\n  const url = OMDB + keyword;\n  return fetch(url, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchLoginStatus = username => {\n  return fetch(\"/session\", {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchLogin = username => {\n  return fetch(\"/session\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\"\n    }),\n    body: JSON.stringify({\n      username\n    })\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchLogout = () => {\n  return fetch(\"/session\", {\n    method: \"DELETE\"\n  }).catch(convertNetworkError).then(response => {\n    return response.ok;\n  });\n};\nexport const fetchCommentsFromServer = id => {\n  return fetch(`/comments/${id}`, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const sendCommentToServer = (id, comment) => {\n  return fetch(\"/comments\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: id,\n      comment: comment\n    })\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const updateCommentToServer = (id, comment) => {\n  return fetch(\"/comments\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: id,\n      comment: comment\n    })\n  }).catch(convertNetworkError).then(convertError);\n};","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/service.js"],"names":["convertNetworkError","Promise","reject","error","convertError","response","ok","json","then","err","fetchTopRated","TMDB","fetch","method","catch","convertImdbIdtoId","imdbId","fetchRecommendation","id","fetchDetail","fetchOMDB","keyword","OMDB","url","fetchLoginStatus","username","fetchLogin","headers","Headers","body","JSON","stringify","fetchLogout","fetchCommentsFromServer","sendCommentToServer","comment","updateCommentToServer"],"mappings":"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","sourcesContent":["const convertNetworkError = () => Promise.reject({ error: \"NETWORK_ERROR\" });\n\nconst convertError = (response) => {\n  if (response.ok) {\n    return response.json();\n  }\n  return response.json().then((err) => Promise.reject(err));\n};\n\nexport const fetchTopRated = () => {\n  const TMDB =\n    \"https://api.themoviedb.org/3/movie/top_rated?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1\";\n  return fetch(TMDB, {\n    method: \"GET\",\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const convertImdbIdtoId = (imdbId) => {\n  const TMDB = `https://api.themoviedb.org/3/find/${imdbId}?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&external_source=imdb_id`;\n  return fetch(TMDB, {\n    method: \"GET\",\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const fetchRecommendation = (id) => {\n  const TMDB = `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1`;\n  return fetch(TMDB, {\n    method: \"GET\",\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\nexport const fetchDetail = (id) => {\n  const TMDB = `https://api.themoviedb.org/3/movie/${id}?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US`;\n  return fetch(TMDB, {\n    method: \"GET\",\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const fetchOMDB = (keyword) => {\n  const OMDB = \"https://www.omdbapi.com/?apikey=c27a2924&s=\";\n  const url = OMDB + keyword;\n  return fetch(url, {\n    method: \"GET\",\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const fetchLoginStatus = (username) => {\n  return fetch(\"/session\", {\n    method: \"GET\",\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const fetchLogin = (username) => {\n  return fetch(\"/session\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"content-type\": \"application/json\",\n    }),\n    body: JSON.stringify({ username }),\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const fetchLogout = () => {\n  return fetch(\"/session\", {\n    method: \"DELETE\",\n  })\n    .catch(convertNetworkError)\n    .then((response) => {\n      return response.ok;\n    });\n};\nexport const fetchCommentsFromServer = (id) => {\n  return fetch(`/comments/${id}`, {\n    method: \"GET\",\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const sendCommentToServer = (id, comment) => {\n  return fetch(\"/comments\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ id: id, comment: comment }),\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n\nexport const updateCommentToServer = (id, comment) => {\n  return fetch(\"/comments\", {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      id: id,\n      comment: comment,\n    }),\n  })\n    .catch(convertNetworkError)\n    .then(convertError);\n};\n"]},"metadata":{},"sourceType":"module"}