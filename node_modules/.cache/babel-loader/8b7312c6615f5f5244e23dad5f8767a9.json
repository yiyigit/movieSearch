{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/TopRated.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { MovieContext, ErrorContext } from './context';\nimport errors from \"./errors\";\nimport { fetchTopRated, fetchDetail } from './service';\n\nconst TopRated = () => {\n  const [topArray, setTopArray] = useState([]);\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [setError] = useContext(ErrorContext);\n  useEffect(() => {\n    fetchTopRated().then(json => {\n      setTopArray(json.results.slice(0, 4));\n    }).catch(err => {\n      setError(errors[err.message || \"DEFAULT\"]);\n    });\n  }, []);\n\n  const searchById = id => {\n    setMovieState({ ...movieState,\n      id: id\n    });\n  };\n\n  const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n  const movieArray = topArray.map(movie => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: topArray.indexOf(movie),\n      className: \"top-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imgURL + movie.poster_path,\n      className: \"clickable\",\n      onClick: () => searchById(movie.id),\n      alt: \"poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"clickable\",\n      onClick: () => searchById(movie.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    }, \" \", movie.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, \" \", movie.release_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }, \" Rating: \", movie.vote_average, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => searchById(movie.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, \" details\"));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, \" Top Rated Movies: \"), /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"top-rated-movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, movieArray));\n};\n\nexport default TopRated;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/TopRated.jsx"],"names":["React","useState","useEffect","useContext","MovieContext","ErrorContext","errors","fetchTopRated","fetchDetail","TopRated","topArray","setTopArray","movieState","setMovieState","setError","then","json","results","slice","catch","err","message","searchById","id","imgURL","movieArray","map","movie","indexOf","poster_path","title","release_date","vote_average"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,WAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,WAAzC;;AAEA,MAAMC,QAAQ,GAAG,MAAK;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BV,UAAU,CAACC,YAAD,CAA9C;AACA,QAAM,CAACU,QAAD,IAAaX,UAAU,CAACE,YAAD,CAA7B;AAEAH,EAAAA,SAAS,CAAC,MAAK;AACdK,IAAAA,aAAa,GACRQ,IADL,CACWC,IAAD,IAAU;AACdL,MAAAA,WAAW,CAACK,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAX;AACD,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACdN,MAAAA,QAAQ,CAACR,MAAM,CAACc,GAAG,CAACC,OAAJ,IAAe,SAAhB,CAAP,CAAR;AACD,KANL;AAOA,GARQ,EAQL,EARK,CAAT;;AAUA,QAAMC,UAAU,GAAGC,EAAD,IAAM;AACvBV,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgBW,MAAAA,EAAE,EAACA;AAAnB,KAAD,CAAb;AACA,GAFD;;AAGA,QAAMC,MAAM,GAAG,kCAAf;AAEA,QAAMC,UAAU,GAAGf,QAAQ,CAACgB,GAAT,CAAcC,KAAD,IAAS;AACzC,wBACC;AAAI,MAAA,GAAG,EAAEjB,QAAQ,CAACkB,OAAT,CAAiBD,KAAjB,CAAT;AAAkC,MAAA,SAAS,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,GAAG,EAAGH,MAAM,GAAGG,KAAK,CAACE,WAA1B;AAAwC,MAAA,SAAS,EAAC,WAAlD;AAA8D,MAAA,OAAO,EAAG,MAAMP,UAAU,CAACK,KAAK,CAACJ,EAAP,CAAxF;AAAoG,MAAA,GAAG,EAAC,QAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAG,MAAMD,UAAU,CAACK,KAAK,CAACJ,EAAP,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiEI,KAAK,CAACG,KAAvE,MAFD,eAGC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAsBH,KAAK,CAACI,YAA5B,MAHD,eAIC;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgCJ,KAAK,CAACK,YAAtC,MAJD,eAKC;AAAQ,MAAA,OAAO,EAAG,MAAMV,UAAU,CAACK,KAAK,CAACJ,EAAP,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD,CADD;AAQC,GATkB,CAAnB;AAYA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,eAEC;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,UADD,CAFD,CADD;AAOA,CAvCD;;AAyCA,eAAehB,QAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport { MovieContext, ErrorContext } from './context';\nimport errors from \"./errors\";\nimport {fetchTopRated, fetchDetail} from './service';\n\nconst TopRated = () =>{\n\tconst [topArray, setTopArray] = useState([]);\n\tconst [movieState, setMovieState] = useContext(MovieContext);\n\tconst [setError] = useContext(ErrorContext);\n\t\n\tuseEffect(() =>{\n\t\tfetchTopRated()\n      .then((json) => {\n        setTopArray(json.results.slice(0, 4));\n      })\n      .catch((err) => {\n        setError(errors[err.message || \"DEFAULT\"]);\n      });\n\t} , [])\n\t\n\tconst searchById =(id)=>{\n\t\tsetMovieState({...movieState, id:id});\n\t}\n\tconst imgURL = \"https://image.tmdb.org/t/p/w500/\";\n\t\n\tconst movieArray = topArray.map((movie)=>{\t\n\treturn (\n\t\t<li key={topArray.indexOf(movie)} className=\"top-movie\">\n\t\t\t<img src= {imgURL + movie.poster_path}  className=\"clickable\" onClick ={() => searchById(movie.id)} alt='poster'/> \n\t\t\t<p className=\"clickable\" onClick ={() => searchById(movie.id)}> {movie.title} </p>\n\t\t\t<p className=\"time\"> {movie.release_date} </p>\n\t\t\t<p className=\"rating\"> Rating: {movie.vote_average} </p>\n\t\t\t<button onClick ={() => searchById(movie.id)}> details</button>\n\t\t</li>)\n\t});\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h2> Top Rated Movies: </h2>\n\t\t\t<ol className=\"top-rated-movies\">\n\t\t\t{movieArray}\n\t\t\t</ol>\n\t\t</div>)\n}\n\nexport default TopRated;"]},"metadata":{},"sourceType":"module"}