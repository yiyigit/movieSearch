{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport errors from \"./errors\";\nimport Recommendation from \"./Recommendation\";\nimport { fetchDetail, convertImdbIdtoId } from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Result = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [error, setError] = useContext(ErrorContext);\n  const [comment, setComment] = useState(\"\");\n  useEffect(() => {\n    if (movieState.id) {\n      console.log(\"id\");\n      getDetail(movieState.id);\n    } else {\n      console.log(\"no id\");\n      convertImdbIdtoId(movieState.imdbID).then(json => {\n        if (json.movie_results.length === 0) {\n          throw new Error(\"LACK_KEYWORD\");\n        } else {\n          const id = json.movie_results[0].id;\n          console.log(id);\n          setMovieState({ ...movieState,\n            id: id\n          });\n          setError(\"\");\n        }\n      }).catch(err => {\n        setError(errors[err.error || err || \"DEFAULT\"]);\n      });\n    }\n  }, [movieState.id]);\n\n  const getDetail = id => {\n    const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n    return fetchDetail(id).then(json => {\n      setMovieState({ ...movieState,\n        Title: json.title,\n        Year: json.release_date,\n        imdbID: json.imdb_id,\n        id: json.id,\n        overview: json.overview\n      });\n\n      if (!json.poster_path) {\n        setMovieState({ ...movieState,\n          PosterUrl: unavailablePic\n        });\n      } else {\n        setMovieState({ ...movieState,\n          PosterUrl: imgURL + json.poster_path\n        });\n      }\n\n      setError(\"\");\n    }).catch(err => {\n      setError(errors[err.error || err || \"DEFAULT\"]);\n    });\n  };\n\n  const handleInput = e => {\n    setComment(e.target.value);\n  };\n\n  const sendCommentToServer = () => {\n    console.log(comment);\n  };\n\n  let result_poster;\n  {\n    if (!movieState.PosterUrl) {\n      result_poster = /*#__PURE__*/React.createElement(\"img\", {\n        src: unavailablePic,\n        alt: \"poster unavailable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      });\n    } else {\n      result_poster = /*#__PURE__*/React.createElement(\"img\", {\n        src: movieState.PosterUrl,\n        alt: \"poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      });\n    }\n  }\n  console.log(movieState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \" Title: \", movieState.Title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \" Year: \", movieState.Year, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \" Overview: \", movieState.overview), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"My Comment:\", /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"comment\",\n    rows: \"4\",\n    cols: \"50\",\n    value: comment,\n    onChange: e => handleInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendCommentToServer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"add/update\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, result_poster)), /*#__PURE__*/React.createElement(Recommendation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx"],"names":["React","useContext","useState","useEffect","MovieContext","ErrorContext","errors","Recommendation","fetchDetail","convertImdbIdtoId","unavailablePic","Result","movieState","setMovieState","error","setError","comment","setComment","id","console","log","getDetail","imdbID","then","json","movie_results","length","Error","catch","err","imgURL","Title","title","Year","release_date","imdb_id","overview","poster_path","PosterUrl","handleInput","e","target","value","sendCommentToServer","result_poster"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport errors from \"./errors\";\nimport Recommendation from \"./Recommendation\";\nimport { fetchDetail, convertImdbIdtoId } from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Result = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [error, setError] = useContext(ErrorContext);\n  const [comment, setComment] = useState(\"\");\n\n  useEffect(() => {\n    if (movieState.id) {\n      console.log(\"id\");\n      getDetail(movieState.id);\n    } else {\n      console.log(\"no id\");\n      convertImdbIdtoId(movieState.imdbID)\n        .then((json) => {\n          if (json.movie_results.length === 0) {\n            throw new Error(\"LACK_KEYWORD\");\n          } else {\n            const id = json.movie_results[0].id;\n            console.log(id)\n            setMovieState({ ...movieState, id: id });\n            setError(\"\");\n          }\n        })\n        .catch((err) => {\n          setError(errors[err.error || err || \"DEFAULT\"]);\n        });\n    }\n  }, [movieState.id]);\n\n  const getDetail = (id) => {\n    const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n    return fetchDetail(id)\n      .then((json) => {\n        setMovieState({\n          ...movieState,\n          Title: json.title,\n          Year: json.release_date,\n          imdbID: json.imdb_id,\n          id: json.id,\n          overview: json.overview,\n        });\n        if (!json.poster_path) {\n          setMovieState({ ...movieState, PosterUrl: unavailablePic });\n        } else {\n          setMovieState({\n            ...movieState,\n            PosterUrl: imgURL + json.poster_path,\n          });\n        }\n        setError(\"\");\n      })\n      .catch((err) => {\n        setError(errors[err.error || err || \"DEFAULT\"]);\n      });\n  };\n  const handleInput = (e) => {\n    setComment(e.target.value);\n  };\n  const sendCommentToServer = () => {\n    console.log(comment);\n  };\n  let result_poster;\n  {\n    if (!movieState.PosterUrl) {\n      result_poster = <img src={unavailablePic} alt=\"poster unavailable\" />;\n    } else {\n      result_poster = <img src={movieState.PosterUrl} alt=\"poster\" />;\n    }\n  }\n  console.log(movieState)\n  return (\n    <div className=\"container\">\n      <div className=\"flex-box\">\n        <div className=\"result-detail\">\n          <p> Title: {movieState.Title} </p>\n          <p className=\"time\"> Year: {movieState.Year} </p>\n          <p className=\"overview\"> Overview: {movieState.overview}</p>\n          <label>\n            My Comment:\n            <textarea\n              id=\"comment\"\n              rows=\"4\"\n              cols=\"50\"\n              value={comment}\n              onChange={(e) => handleInput(e)}\n            ></textarea>\n          </label>\n          <button onClick={sendCommentToServer}>add/update</button>\n        </div>\n        <div className=\"img-detail\">{result_poster}</div>\n      </div>\n\n      <Recommendation />\n    </div>\n  );\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}