{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport errors from \"./errors\";\nimport Recommendation from \"./Recommendation\";\nimport { fetchDetail, convertImdbIdtoId, fetchCommentsFromServer, sendCommentToServer } from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Result = ({\n  username\n}) => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [error, setError] = useContext(ErrorContext);\n  useEffect(() => {\n    if (movieState.id) {\n      getDetail(movieState.id);\n    } else {\n      convertImdbIdtoId(movieState.imdbID).then(json => {\n        if (json.movie_results.length === 0) {\n          throw new Error(\"LACK_KEYWORD\");\n        } else {\n          const id = json.movie_results[0].id;\n          setMovieState({ ...movieState,\n            id: id\n          });\n          setError(\"\");\n        }\n      }).catch(err => {\n        setError(errors[err.error || err.message || \"DEFAULT\"]);\n      });\n    }\n  }, [movieState.id, movieState.imdbID]);\n\n  const getDetail = id => {\n    const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n    return fetchDetail(id).then(json => {\n      console.log(\"fetch detail\");\n      setMovieState({\n        Title: json.title,\n        Year: json.release_date,\n        imdbID: json.imdb_id,\n        id: json.id,\n        overview: json.overview,\n        PosterUrl: imgURL + json.poster_path\n      });\n      fetchCommentsFromServer(json.id).then(json => {\n        console.log(json);\n        setMovieState({ ...movieState,\n          comment: json.comment\n        });\n      });\n      setError(\"\");\n    }).catch(err => {\n      setError(errors[err.error || err || \"DEFAULT\"]);\n    });\n  };\n\n  const handleInput = e => {\n    setMovieState({ ...movieState,\n      comment: e.target.value\n    });\n  };\n\n  const sendComment = () => {\n    sendCommentToServer(movieState.id, movieState.comment).then(json => {});\n  };\n\n  let result_poster;\n  {\n    if (!movieState.PosterUrl || movieState.PosterUrl === \"https://image.tmdb.org/t/p/w500/N/A\") {\n      result_poster = /*#__PURE__*/React.createElement(\"img\", {\n        src: unavailablePic,\n        alt: \"poster unavailable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      });\n    } else {\n      result_poster = /*#__PURE__*/React.createElement(\"img\", {\n        src: movieState.PosterUrl,\n        alt: \"poster\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \" Title: \", movieState.Title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \" Year: \", movieState.Year, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \" Overview: \", movieState.overview), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"My Comment:\", /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"comment\",\n    rows: \"4\",\n    cols: \"50\",\n    value: movieState.comment,\n    onChange: e => handleInput(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"add/update\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, result_poster)), /*#__PURE__*/React.createElement(Recommendation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx"],"names":["React","useContext","useState","useEffect","MovieContext","ErrorContext","errors","Recommendation","fetchDetail","convertImdbIdtoId","fetchCommentsFromServer","sendCommentToServer","unavailablePic","Result","username","movieState","setMovieState","error","setError","id","getDetail","imdbID","then","json","movie_results","length","Error","catch","err","message","imgURL","console","log","Title","title","Year","release_date","imdb_id","overview","PosterUrl","poster_path","comment","handleInput","e","target","value","sendComment","result_poster"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport errors from \"./errors\";\nimport Recommendation from \"./Recommendation\";\nimport {\n  fetchDetail,\n  convertImdbIdtoId,\n  fetchCommentsFromServer,\n  sendCommentToServer,\n} from \"./service\";\nimport unavailablePic from \"./unavailable.jpg\";\n\nconst Result = ({ username }) => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [error, setError] = useContext(ErrorContext);\n\n  useEffect(() => {\n    if (movieState.id) {\n      getDetail(movieState.id);\n    } else {\n      convertImdbIdtoId(movieState.imdbID)\n        .then((json) => {\n          if (json.movie_results.length === 0) {\n            throw new Error(\"LACK_KEYWORD\");\n          } else {\n            const id = json.movie_results[0].id;\n            setMovieState({ ...movieState, id: id });\n            setError(\"\");\n          }\n        })\n        .catch((err) => {\n          setError(errors[err.error || err.message || \"DEFAULT\"]);\n        });\n    }\n  }, [movieState.id, movieState.imdbID]);\n\n  const getDetail = (id) => {\n    const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n    return fetchDetail(id)\n      .then((json) => {\n        console.log(\"fetch detail\");\n        setMovieState({\n          Title: json.title,\n          Year: json.release_date,\n          imdbID: json.imdb_id,\n          id: json.id,\n          overview: json.overview,\n          PosterUrl: imgURL + json.poster_path,\n        });\n        fetchCommentsFromServer(json.id).then((json) => {\n          console.log(json);\n          setMovieState({ ...movieState, comment: json.comment });\n        });\n\n        setError(\"\");\n      })\n      .catch((err) => {\n        setError(errors[err.error || err || \"DEFAULT\"]);\n      });\n  };\n\n  const handleInput = (e) => {\n    setMovieState({ ...movieState, comment: e.target.value });\n  };\n  const sendComment = () => {\n    sendCommentToServer(movieState.id, movieState.comment).then((json) => {});\n  };\n  let result_poster;\n  {\n    if (\n      !movieState.PosterUrl ||\n      movieState.PosterUrl === \"https://image.tmdb.org/t/p/w500/N/A\"\n    ) {\n      result_poster = <img src={unavailablePic} alt=\"poster unavailable\" />;\n    } else {\n      result_poster = <img src={movieState.PosterUrl} alt=\"poster\" />;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-box\">\n        <div className=\"result-detail\">\n          <p className=\"title\"> Title: {movieState.Title} </p>\n          <p className=\"time\"> Year: {movieState.Year} </p>\n          <p className=\"overview\"> Overview: {movieState.overview}</p>\n          <label>\n            My Comment:\n            <textarea\n              id=\"comment\"\n              rows=\"4\"\n              cols=\"50\"\n              value={movieState.comment}\n              onChange={(e) => handleInput(e)}\n            ></textarea>\n          </label>\n          <button onClick={sendComment}>add/update</button>\n        </div>\n        <div className=\"img-detail\">{result_poster}</div>\n      </div>\n\n      <Recommendation />\n    </div>\n  );\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}