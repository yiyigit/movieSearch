{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { MovieContext, ErrorContext } from \"./context\";\nimport Recommendation from './Recommendation';\nimport { fetchDetail, convertImdbIdtoId } from './service';\n\nconst Result = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [error, setError] = useContext(ErrorContext);\n  useEffect(() => {\n    if (movieState.id) {\n      const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n      getDetail(movieState.id);\n    }\n\n    if (!movieState.id) {\n      convertImdbIdtoId(movieState.imdbID).then(json => {\n        const id = json.movie_results[0].id;\n        getDetail(id);\n      });\n    }\n  }, [movieState.id]);\n\n  const getDetail = id => {\n    const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n    return fetchDetail(id).then(json => {\n      setMovieState({\n        Title: json.title,\n        Year: json.release_date,\n        imdbID: json.imdb_id,\n        id: json.id,\n        overview: json.overview,\n        PosterUrl: imgURL + json.poster_path\n      });\n    }).catch(err => {\n      setError(errors[err.message || \"DEFAULT\"]);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, \" Title: \", movieState.Title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, \" Year: \", movieState.Year, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n    src: movieState.PosterUrl,\n    alt: \"poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, \" Overview: \", movieState.overview), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"commet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, \"Comments:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"comment\",\n    rows: \"4\",\n    cols: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Recommendation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Result.jsx"],"names":["React","useContext","useEffect","MovieContext","ErrorContext","Recommendation","fetchDetail","convertImdbIdtoId","Result","movieState","setMovieState","error","setError","id","imgURL","getDetail","imdbID","then","json","movie_results","Title","title","Year","release_date","imdb_id","overview","PosterUrl","poster_path","catch","err","errors","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,WAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,WAAR,EAAqBC,iBAArB,QAA6C,WAA7C;;AAGA,MAAMC,MAAM,GAAG,MAAK;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,UAAU,CAACE,YAAD,CAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACG,YAAD,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACb,QAAGO,UAAU,CAACI,EAAd,EAAiB;AAChB,YAAMC,MAAM,GAAG,kCAAf;AACAC,MAAAA,SAAS,CAACN,UAAU,CAACI,EAAZ,CAAT;AACA;;AACD,QAAG,CAACJ,UAAU,CAACI,EAAf,EAAkB;AAClBN,MAAAA,iBAAiB,CAACE,UAAU,CAACO,MAAZ,CAAjB,CACCC,IADD,CACOC,IAAD,IAAS;AACb,cAAML,EAAE,GAAGK,IAAI,CAACC,aAAL,CAAmB,CAAnB,EAAsBN,EAAjC;AACAE,QAAAA,SAAS,CAACF,EAAD,CAAT;AACD,OAJD;AAKC;AAED,GAbQ,EAaP,CAACJ,UAAU,CAACI,EAAZ,CAbO,CAAT;;AAeA,QAAME,SAAS,GAAIF,EAAD,IAAO;AACxB,UAAMC,MAAM,GAAG,kCAAf;AACA,WAAOR,WAAW,CAACO,EAAD,CAAX,CACFI,IADE,CACIC,IAAD,IAAU;AACdR,MAAAA,aAAa,CAAC;AACZU,QAAAA,KAAK,EAAEF,IAAI,CAACG,KADA;AAEZC,QAAAA,IAAI,EAAEJ,IAAI,CAACK,YAFC;AAGZP,QAAAA,MAAM,EAAEE,IAAI,CAACM,OAHD;AAIZX,QAAAA,EAAE,EAAEK,IAAI,CAACL,EAJG;AAKZY,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QALH;AAMZC,QAAAA,SAAS,EAAEZ,MAAM,GAAGI,IAAI,CAACS;AANb,OAAD,CAAb;AAQD,KAVE,EAWFC,KAXE,CAWKC,GAAD,IAAS;AACdjB,MAAAA,QAAQ,CAACkB,MAAM,CAACD,GAAG,CAACE,OAAJ,IAAe,SAAhB,CAAP,CAAR;AACD,KAbE,CAAP;AAcA,GAhBD;;AAiBA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYtB,UAAU,CAACW,KAAvB,MADA,eAEA;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA4BX,UAAU,CAACa,IAAvC,MAFA,eAGA;AAAK,IAAA,GAAG,EAAGb,UAAU,CAACiB,SAAtB;AAAiC,IAAA,GAAG,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoCjB,UAAU,CAACgB,QAA/C,CAJA,eAKA;AAAO,IAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALA,eAMA;AAAU,IAAA,EAAE,EAAC,SAAb;AAAuB,IAAA,IAAI,EAAC,GAA5B;AAAgC,IAAA,IAAI,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAOA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADD;AAUA,CA9CD;;AAgDA,eAAejB,MAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport { MovieContext, ErrorContext } from \"./context\";\nimport Recommendation from './Recommendation';\nimport {fetchDetail, convertImdbIdtoId} from './service';\n\n\nconst Result = () =>{\n\tconst [movieState, setMovieState] = useContext(MovieContext);\n\tconst [error, setError] = useContext(ErrorContext);\n\n\tuseEffect(()=>{\n\t\tif(movieState.id){\n\t\t\tconst imgURL = \"https://image.tmdb.org/t/p/w500/\";\n\t\t\tgetDetail(movieState.id)\n\t\t}\n\t\tif(!movieState.id){\n\t\tconvertImdbIdtoId(movieState.imdbID)\n\t\t.then((json) =>{\n\t\t\t const id = json.movie_results[0].id;\n\t\t\t getDetail(id)\n\t\t})\n\t\t}\n\n\t},[movieState.id])\n\t\n\tconst getDetail = (id) =>{\n\t\tconst imgURL = \"https://image.tmdb.org/t/p/w500/\";\n\t\treturn fetchDetail(id)\n      .then((json) => {\n        setMovieState({\n          Title: json.title,\n          Year: json.release_date,\n          imdbID: json.imdb_id,\n          id: json.id,\n          overview: json.overview,\n          PosterUrl: imgURL + json.poster_path,\n        });\n      })\n      .catch((err) => {\n        setError(errors[err.message || \"DEFAULT\"]);\n      });\n\t}\n\treturn (\n\t\t<div>\n\t\t<p> Title: {movieState.Title} </p>\n\t\t<p className=\"time\"> Year: {movieState.Year} </p>\n\t\t<img src= {movieState.PosterUrl} alt='poster'/> \n\t\t<p className=\"overview\">\tOverview: {movieState.overview}</p>\n\t\t<label for=\"commet\">Comments:</label>\n\t\t<textarea id=\"comment\" rows=\"4\" cols =\"20\" ></textarea>\n\t\t<Recommendation />\n\t\t</div>)\n}\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}