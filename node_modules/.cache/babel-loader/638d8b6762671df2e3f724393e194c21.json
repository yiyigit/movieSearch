{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Search.jsx\";\nimport React, { useContext } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport TopRated from \"./TopRated\";\nimport errors from \"./errors\";\nimport Result from \"./Result\";\nimport { fetchOMDB } from \"./service\";\n\nconst Search = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [setError] = useContext(ErrorContext);\n\n  const searchOmdb = e => {\n    e.preventDefault();\n    fetchOMDB(movieState.keyword).then(json => {\n      if (json.Error) {\n        throw new Error(\"MOVIE_NOT_FOUND\");\n      } else {\n        setMovieState({\n          imdbID: json.Search[0].imdbID,\n          Title: json.Search[0].Title,\n          Year: json.Search[0].Year\n        });\n      }\n    }).catch(err => {\n      setError(errors[err.error || err.message || \"DEFAULT\"]);\n      setMovieState({});\n    });\n  };\n\n  const handleChange = e => {\n    setMovieState({ ...movieState,\n      keyword: e.target.value\n    });\n  };\n\n  let result;\n\n  if (movieState.imdbID || movieState.id) {\n    result = /*#__PURE__*/React.createElement(Result, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }\n    });\n  } else {\n    result = /*#__PURE__*/React.createElement(TopRated, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    });\n  }\n\n  console.log(movieState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => searchOmdb(e),\n    className: \"search-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: movieState.keyword || \"\",\n    placeholder: \"Search...\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !movieState.keyword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \" \", \"Search\", \" \")), result);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Search.jsx"],"names":["React","useContext","MovieContext","ErrorContext","TopRated","errors","Result","fetchOMDB","Search","movieState","setMovieState","setError","searchOmdb","e","preventDefault","keyword","then","json","Error","imdbID","Title","Year","catch","err","error","message","handleChange","target","value","result","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,WAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,UAAU,CAACC,YAAD,CAA9C;AACA,QAAM,CAACS,QAAD,IAAaV,UAAU,CAACE,YAAD,CAA7B;;AAEA,QAAMS,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,SAAS,CAACE,UAAU,CAACM,OAAZ,CAAT,CACGC,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,cAAM,IAAIA,KAAJ,CAAU,iBAAV,CAAN;AACD,OAFD,MAEO;AACLR,QAAAA,aAAa,CAAC;AACZS,UAAAA,MAAM,EAAEF,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAeW,MADX;AAEZC,UAAAA,KAAK,EAAEH,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAeY,KAFV;AAGZC,UAAAA,IAAI,EAAEJ,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAea;AAHT,SAAD,CAAb;AAKD;AACF,KAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACdZ,MAAAA,QAAQ,CAACN,MAAM,CAACkB,GAAG,CAACC,KAAJ,IAAaD,GAAG,CAACE,OAAjB,IAA4B,SAA7B,CAAP,CAAR;AACAf,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KAfH;AAgBD,GAlBD;;AAoBA,QAAMgB,YAAY,GAAIb,CAAD,IAAO;AAC1BH,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBM,MAAAA,OAAO,EAAEF,CAAC,CAACc,MAAF,CAASC;AAAnC,KAAD,CAAb;AACD,GAFD;;AAIA,MAAIC,MAAJ;;AACA,MAAIpB,UAAU,CAACU,MAAX,IAAqBV,UAAU,CAACqB,EAApC,EAAwC;AACtCD,IAAAA,MAAM,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACD,GAFD,MAEO;AACLA,IAAAA,MAAM,gBAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYvB,UAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAGI,CAAD,IAAKD,UAAU,CAACC,CAAD,CAA/B;AAAoC,IAAA,SAAS,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEJ,UAAU,CAACM,OAAX,IAAsB,EAF/B;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,QAAQ,EAAGF,CAAD,IAAOa,YAAY,CAACb,CAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACJ,UAAU,CAACM,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,YAES,GAFT,CAPF,CADF,EAaGc,MAbH,CADF;AAiBD,CApDD;;AAqDA,eAAerB,MAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { MovieContext, ErrorContext } from \"./context\";\nimport TopRated from \"./TopRated\";\nimport errors from \"./errors\";\nimport Result from \"./Result\";\nimport { fetchOMDB } from \"./service\";\n\nconst Search = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [setError] = useContext(ErrorContext);\n\n  const searchOmdb = (e) => {\n    e.preventDefault()\n    fetchOMDB(movieState.keyword)\n      .then((json) => {\n        if (json.Error) {\n          throw new Error(\"MOVIE_NOT_FOUND\");\n        } else {\n          setMovieState({\n            imdbID: json.Search[0].imdbID,\n            Title: json.Search[0].Title,\n            Year: json.Search[0].Year,\n          });\n        }\n      })\n      .catch((err) => {\n        setError(errors[err.error || err.message || \"DEFAULT\"]);\n        setMovieState({});\n      });\n  };\n\n  const handleChange = (e) => {\n    setMovieState({ ...movieState, keyword: e.target.value });\n  };\n\n  let result;\n  if (movieState.imdbID || movieState.id) {\n    result = <Result />;\n  } else {\n    result = <TopRated />;\n  }\n  console.log(movieState);\n  return (\n    <div>\n      <form onSubmit={(e)=>searchOmdb(e)} className=\"search-panel\">\n        <input\n          type=\"text\"\n          value={movieState.keyword || \"\"}\n          placeholder=\"Search...\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button type=\"submit\" disabled={!movieState.keyword}>\n          {\" \"}\n          Search{\" \"}\n        </button>\n      </form>\n      {result}\n    </div>\n  );\n};\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}