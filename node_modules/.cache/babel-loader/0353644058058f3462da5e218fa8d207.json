{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Login.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { fetchLogin } from './service';\nimport errors from './errors';\nimport ErrorContext from './context';\nimport spinner from \"./spinner.svg\";\n\nconst Login = ({\n  onLogin\n}) => {\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useContext(ErrorContext);\n\n  const performLogin = () => {\n    if (!username) {\n      setError(errors.USERNAME_REQUIRED);\n      return;\n    }\n\n    setError('');\n    setIsLoading(true);\n    fetchLogin(username).then(userInfo => {\n      onLogin(userInfo.username); // inform parent, put callback on the queue\n      //no need to setIsLoading(false), because default will show another page\n    }).catch(err => {\n      setError(errors[err.code || 'DEFAULT']);\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"spinner\",\n    src: spinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: performLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Login\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Login.jsx"],"names":["React","useState","useContext","fetchLogin","errors","ErrorContext","Login","onLogin","username","setUsername","isLoading","setIsLoading","error","setError","performLogin","USERNAME_REQUIRED","then","userInfo","catch","err","code","e","target","value","spinner"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,WAAzB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACG,YAAD,CAApC;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzB,QAAG,CAACN,QAAJ,EAAc;AACZK,MAAAA,QAAQ,CAACT,MAAM,CAACW,iBAAR,CAAR;AACA;AACD;;AACDF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAR,IAAAA,UAAU,CAACK,QAAD,CAAV,CACCQ,IADD,CACQC,QAAD,IAAc;AACnBV,MAAAA,OAAO,CAACU,QAAQ,CAACT,QAAV,CAAP,CADmB,CACS;AAC5B;AACD,KAJD,EAKCU,KALD,CAKSC,GAAD,IAAS;AACfN,MAAAA,QAAQ,CAACT,MAAM,CAACe,GAAG,CAACC,IAAJ,IAAY,SAAb,CAAP,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD;AASD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBC,KAAtB,CADF,eAEE;AAAO,IAAA,QAAQ,EAAIS,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGIb,SAAS,gBACP;AAAK,IAAA,GAAG,EAAC,SAAT;AAAmB,IAAA,GAAG,EAAEc,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAEP;AAAQ,IAAA,OAAO,EAAGV,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALN,CADF;AAWD,CApCD;;AAsCA,eAAeR,KAAf","sourcesContent":["import React, { useState,useContext } from 'react';\nimport { fetchLogin } from './service';\nimport errors from './errors';\nimport ErrorContext from './context';\nimport spinner from './spinner.svg';\nconst Login = ({ onLogin }) => {\n\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useContext(ErrorContext);\n\n  const performLogin = () => {\n    if(!username) {\n      setError(errors.USERNAME_REQUIRED);\n      return;\n    }\n    setError('');\n    setIsLoading(true);\n    \n    fetchLogin(username)\n    .then( (userInfo) => {\n      onLogin(userInfo.username); // inform parent, put callback on the queue\n      //no need to setIsLoading(false), because default will show another page\n    })\n    .catch( (err) => {\n      setError(errors[err.code || 'DEFAULT']);\n      setIsLoading(false);\n    });\n  };\n\n  return (\n    <div className=\"login\">\n      <p className=\"error\">{error}</p>\n      <input onChange={ (e) => setUsername(e.target.value) }/>\n      { isLoading ?\n          <img alt=\"spinner\" src={spinner}/> :\n          <button onClick={ performLogin }>Login</button>\n      }\n    </div>\n  );\n\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}