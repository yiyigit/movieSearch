{"ast":null,"code":"var _jsxFileName = \"/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Recommendation.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport MovieContext from './context';\nimport { fetchRecommendation, convertImdbIdtoId } from './service';\n\nconst Recommendation = () => {\n  const [movieState, setMovieState] = useContext(MovieContext);\n  const [recommendationList, setRecommendationList] = useState([]);\n  useEffect(() => {\n    convertImdbIdtoId(movieState.imdbID).then(json => {\n      const id = json.movie_results[0].id;\n      fetchRecommendation(id).then(json => {\n        setRecommendationList(json.results.slice(0, 3));\n      });\n    });\n  }, [movieState.imdbID]);\n  const imgURL = \"https://image.tmdb.org/t/p/w500/\";\n  const recommendationArray = recommendationList.map(movie => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: recommendationList.indexOf(movie),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, \" Title: \", movie.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, \" Year: \", movie.release_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }, \" Rating :\", movie.vote_average, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: imgURL + movie.poster_path,\n      alt: \"poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, \"Recommendation \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, recommendationArray));\n};\n\nexport default Recommendation;","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/Recommendation.jsx"],"names":["React","useState","useContext","useEffect","MovieContext","fetchRecommendation","convertImdbIdtoId","Recommendation","movieState","setMovieState","recommendationList","setRecommendationList","imdbID","then","json","id","movie_results","results","slice","imgURL","recommendationArray","map","movie","indexOf","title","release_date","vote_average","poster_path"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,SAAQC,mBAAR,EAA6BC,iBAA7B,QAAqD,WAArD;;AAEA,MAAMC,cAAc,GAAG,MAAK;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA+BP,UAAU,CAACE,YAAD,CAA/C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,EAAD,CAA5D;AAGAE,EAAAA,SAAS,CAAC,MAAI;AACbG,IAAAA,iBAAiB,CAACE,UAAU,CAACI,MAAZ,CAAjB,CACCC,IADD,CACOC,IAAD,IAAS;AACV,YAAMC,EAAE,GAAGD,IAAI,CAACE,aAAL,CAAmB,CAAnB,EAAsBD,EAAjC;AACDV,MAAAA,mBAAmB,CAACU,EAAD,CAAnB,CACFF,IADE,CACGC,IAAI,IAAG;AACZH,QAAAA,qBAAqB,CAACG,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAqB,CAArB,CAAD,CAArB;AACA,OAHE;AAID,KAPH;AAQA,GATQ,EASP,CAACV,UAAU,CAACI,MAAZ,CATO,CAAT;AAaA,QAAMO,MAAM,GAAG,kCAAf;AACA,QAAMC,mBAAmB,GAAGV,kBAAkB,CAACW,GAAnB,CAAwBC,KAAD,IAAS;AAC5D,wBACC;AAAI,MAAA,GAAG,EAAEZ,kBAAkB,CAACa,OAAnB,CAA2BD,KAA3B,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYA,KAAK,CAACE,KAAlB,MADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWF,KAAK,CAACG,YAAjB,MAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaH,KAAK,CAACI,YAAnB,MAHD,eAIC;AAAK,MAAA,GAAG,EAAGP,MAAM,GAAGG,KAAK,CAACK,WAA1B;AAAuC,MAAA,GAAG,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD;AAOC,GAR2B,CAA5B;AAUA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADO,eAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,mBADD,CAFO,CAAR;AAOA,CApCD;;AAsCA,eAAeb,cAAf","sourcesContent":["import React, {useState,useContext,useEffect} from 'react';\nimport MovieContext from './context';\nimport {fetchRecommendation, convertImdbIdtoId} from './service';\n\nconst Recommendation = () =>{\n\tconst [movieState, setMovieState]  = useContext(MovieContext);\n\tconst [recommendationList, setRecommendationList] = useState([]);\n\t\n\t\n\tuseEffect(()=>{\n\t\tconvertImdbIdtoId(movieState.imdbID)\n\t\t.then((json) =>{\n    \t \tconst id = json.movie_results[0].id;\n\t    \tfetchRecommendation(id)\n\t\t\t.then(json =>{\n\t\t\t\tsetRecommendationList(json.results.slice(0,3));\n\t\t\t})\n  \t\t});\n\t},[movieState.imdbID])\n\t\n\n\n\tconst imgURL = \"https://image.tmdb.org/t/p/w500/\";\n\tconst recommendationArray = recommendationList.map((movie)=>{\t\n\treturn (\n\t\t<li key={recommendationList.indexOf(movie)}>\n\t\t\t<p> Title: {movie.title} </p>\n\t\t\t<p> Year: {movie.release_date} </p>\n\t\t\t<p> Rating :{movie.vote_average} </p>\n\t\t\t<img src= {imgURL + movie.poster_path} alt='poster'/> \n\t\t</li>)\n\t});\n\n\treturn (<div> \n\t\t<h2>Recommendation </h2>\n\t\t<ul>\n\t\t{recommendationArray}\n\t\t</ul>\n\n\t\t</div>)\n}\n\nexport default Recommendation;"]},"metadata":{},"sourceType":"module"}