{"ast":null,"code":"const convertNetworkError = () => Promise.reject({\n  error: 'NETWORK_ERROR'\n});\n\nconst convertError = response => {\n  if (response.ok) {\n    return response.json();\n  }\n\n  return response.json().then(err => Promise.reject(err));\n};\n\nexport const fetchTopRated = () => {\n  const TMDB = \"https://api.themoviedb.org/3/movie/top_rated?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1\";\n  return fetch(TMDB, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const convertImdbIdtoId = imdbId => {\n  const TMDB = `https://api.themoviedb.org/3/find/{imdbId}?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&external_source=imdb_id`;\n  fetch(TMDB, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError).then(json => {\n    return json.movie_results[0].id;\n  });\n};\nexport const fetchRecommendation = () => {\n  const TMDB = \"https://api.themoviedb.org/3/movie/top_rated?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1\";\n  return fetch(TMDB, {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchOMDB = keyword => {\n  const OMDB = \"https://www.omdbapi.com/?apikey=c27a2924&s=\";\n  const url = OMDB + keyword;\n  return fetch(url, {\n    method: 'GET'\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchLoginStatus = username => {\n  return fetch('/session', {\n    method: 'GET'\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchLogin = username => {\n  return fetch('/session', {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json'\n    }),\n    body: JSON.stringify({\n      username\n    })\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const fetchLogout = () => {\n  return fetch('/session', {\n    method: 'DELETE'\n  }).catch(convertNetworkError).then(response => {\n    return response.ok;\n  });\n};\nexport const getMessagesFromServer = () => {\n  return fetch('/messages', {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const sendMessageToServer = formedMessage => {\n  return fetch('/messages', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formedMessage)\n  }).catch(convertNetworkError).then(convertError);\n};\nexport const getUsersFromServer = () => {\n  return fetch('/users', {\n    method: \"GET\"\n  }).catch(convertNetworkError).then(convertError);\n};","map":{"version":3,"sources":["/Users/yiyizhou/Desktop/NEU/info6250 Web tool/demo/final-project/src/service.js"],"names":["convertNetworkError","Promise","reject","error","convertError","response","ok","json","then","err","fetchTopRated","TMDB","fetch","method","catch","convertImdbIdtoId","imdbId","movie_results","id","fetchRecommendation","fetchOMDB","keyword","OMDB","url","fetchLoginStatus","username","fetchLogin","headers","Headers","body","JSON","stringify","fetchLogout","getMessagesFromServer","sendMessageToServer","formedMessage","getUsersFromServer"],"mappings":"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","sourcesContent":["const convertNetworkError = () => Promise.reject( { error: 'NETWORK_ERROR' });\n\nconst convertError = (response) =>{\n    if(response.ok){\n      return response.json();\n    }\n    return response.json().then(err => Promise.reject(err));\n};\n\nexport const fetchTopRated = () =>{\n  const TMDB =\"https://api.themoviedb.org/3/movie/top_rated?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1\";\n  return fetch(TMDB, {\n    method:\"GET\"})\n  .catch( convertNetworkError )\n  .then( convertError );\n}\n\nexport const convertImdbIdtoId = (imdbId) =>{\n  const TMDB = `https://api.themoviedb.org/3/find/{imdbId}?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&external_source=imdb_id`\n  fetch(TMDB, {\n    method:\"GET\"})\n  .catch( convertNetworkError )\n  .then( convertError )\n  .then(json =>{\n    return json.movie_results[0].id;\n  });\n\n}\n\nexport const fetchRecommendation = () =>{\n  const TMDB =\"https://api.themoviedb.org/3/movie/top_rated?api_key=c946c30088ad16d4120dcc22233c5fdc&language=en-US&page=1\";\n  return fetch(TMDB, {\n    method:\"GET\"})\n  .catch( convertNetworkError )\n  .then( convertError );\n}\n\nexport const fetchOMDB = (keyword) =>{\n  const OMDB = \"https://www.omdbapi.com/?apikey=c27a2924&s=\"\n  const url = OMDB + keyword;\n  return fetch(url, {\n    method:'GET'})\n  .catch( convertNetworkError )\n  .then( convertError );\n}\n\nexport const fetchLoginStatus = (username) => {\n  return fetch('/session', {\n    method: 'GET',\n  })\n  .catch( convertNetworkError )\n  .then( convertError );\n};\n\nexport const fetchLogin = (username) => {\n  return fetch('/session', {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json',\n    }),\n    body: JSON.stringify({ username }),\n  })\n  .catch( convertNetworkError )\n  .then( convertError );\n};\n\nexport const fetchLogout = () => {\n  return fetch('/session', {\n    method: 'DELETE',\n  })\n  .catch( convertNetworkError)\n  .then( response => {\n    return response.ok;\n  });\n};\nexport  const getMessagesFromServer = () =>{\n  return fetch('/messages',{method:\"GET\"})\n    .catch( convertNetworkError )\n    .then( convertError );\n  };\n\nexport const sendMessageToServer = (formedMessage)=>{\n  return  fetch('/messages', {method:'POST', \n        headers:{'Content-Type':'application/json'}, \n        body:JSON.stringify(formedMessage)\n      })\n      .catch( convertNetworkError )\n      .then( convertError )\n  };\n\n  export  const getUsersFromServer = () =>{\n  return fetch('/users',{method:\"GET\"})\n    .catch(convertNetworkError)\n    .then( convertError );\n  };\n\n\n\n"]},"metadata":{},"sourceType":"module"}